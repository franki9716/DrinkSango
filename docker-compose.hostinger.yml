version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: sanguapp_db_hostinger
    environment:
      POSTGRES_DB: sanguapp_prod
      POSTGRES_USER: sanguapp_prod
      POSTGRES_PASSWORD: ${DB_PASSWORD:-sanguapp_secure_2024}
      POSTGRES_INITDB_ARGS: '--encoding=UTF8 --locale=C'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./backups:/backups
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - sanguapp_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sanguapp_prod"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: sanguapp_api_hostinger
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: sanguapp_prod
      DB_USER: sanguapp_prod
      DB_PASSWORD: ${DB_PASSWORD:-sanguapp_secure_2024}
      JWT_SECRET: ${JWT_SECRET:-change_this_in_production}
      JWT_EXPIRES_IN: 7d
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
      API_RATE_LIMIT: 200
    volumes:
      - ./backend/uploads:/app/uploads
      - ./logs/backend:/app/logs
    ports:
      - "127.0.0.1:3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - sanguapp_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: https://${DOMAIN:-localhost}/api
        REACT_APP_APP_NAME: SanguApp
        REACT_APP_VERSION: 1.0.0
    container_name: sanguapp_web_hostinger
    volumes:
      - ./nginx/html:/usr/share/nginx/html
    ports:
      - "127.0.0.1:3000:80"
    depends_on:
      - backend
    networks:
      - sanguapp_network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: sanguapp_proxy_hostinger
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.hostinger.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - sanguapp_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  sanguapp_network:
    driver: bridge
