version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: sanguapp_db_subdomain
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-sanguapp_prod}
      POSTGRES_USER: ${POSTGRES_USER:-sanguapp_prod}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data_sub:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./backups:/backups
    ports:
      - "127.0.0.1:5433:5432"  # Puerto alternativo para evitar conflicto
    networks:
      - sanguapp_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-sanguapp_prod}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: sanguapp_api_subdomain
    env_file:
      - ./backend/.env
    volumes:
      - ./backend/uploads:/app/uploads
      - ./logs/backend:/app/logs
    ports:
      - "127.0.0.1:3002:3001"  # Puerto alternativo
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - sanguapp_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: https://sanguapp.toptraining.es:8443/api
        REACT_APP_APP_NAME: "SanguApp TopTraining"
        REACT_APP_VERSION: "1.0.0"
    container_name: sanguapp_web_subdomain
    ports:
      - "127.0.0.1:3001:80"  # Puerto alternativo
    depends_on:
      - backend
    networks:
      - sanguapp_network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: sanguapp_proxy_subdomain
    ports:
      - "8080:8080"   # Puerto alternativo HTTP
      - "8443:8443"   # Puerto alternativo HTTPS
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - sanguapp_network
    restart: unless-stopped

volumes:
  postgres_data_sub:
    driver: local

networks:
  sanguapp_network:
    driver: bridge
